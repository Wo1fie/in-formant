FROM ubuntu:16.04 AS build

ARG QT_EMAIL
ARG QT_PW
ENV QT_EMAIL=$QT_EMAIL QT_PW=$QT_PW

RUN apt-get update -y && \
        apt-get install -y software-properties-common && \
        add-apt-repository -y ppa:ubuntu-toolchain-r/test && \
        apt-get update -y && \
        apt-get install -y \
            gcc-9 \
            g++-9 \
            wget \
            make \
            libasound-dev \
            libpulse-dev \
            libpng-dev \
            libxcomposite-dev \
            libxcb-glx0-dev \
            libx11-xcb-dev \
            libxrender-dev \
            libxkbcommon-x11-dev \
            libfontconfig1-dev \
            libwayland-cursor0 \
            libgl1-mesa-glx

RUN mkdir /dockerbuild
WORKDIR /dockerbuild
ENV CC=/usr/bin/gcc-9 CXX=/usr/bin/g++-9

RUN echo $PKG_CONFIG_PATH

# Install AppImageKit.
RUN wget https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage && \
        cp appimagetool-x86_64.AppImage /usr/local/bin/appimagetool && \
        chmod +x /usr/local/bin/appimagetool

# Install cmake
ENV ver=3.19.2
RUN wget https://github.com/Kitware/CMake/releases/download/v$ver/cmake-$ver-Linux-x86_64.sh && \
        sh cmake-$ver-Linux-x86_64.sh --skip-license --prefix=/usr/local

# Install qt
RUN wget https://download.qt.io/archive/online_installers/4.0/qt-unified-linux-x64-4.0.1-online.run
RUN chmod +x qt-unified-linux-x64-4.0.1-online.run && \
        ./qt-unified-linux-x64-4.0.1-online.run in \
            --no-default-installations \
            --root /opt/Qt5 \
            --auto-answer telemetry-question=Yes,AssociateCommonFiletypes=Yes,installationError=Retry,installationErrorWithRetry=Retry,DownloadError=Retry,archiveDownloadError=Retry,stopProcessesForUpdates=Retry \
            --default-answer \
            --accept-licenses \
            --accept-obligations \
            --email $QT_EMAIL \
            --pw $QT_PW \
            --confirm-command \
            qt.qt5.51210.gcc_64 \
        && \
        rm -f ~/.local/share/Qt/qtlicenses.ini ~/.local/share/Qt/qtaccount.ini

# Build pkgconfig
ENV ver=0.29.2
RUN wget https://pkg-config.freedesktop.org/releases/pkg-config-$ver.tar.gz && \
        tar -xvf pkg-config-$ver.tar.gz
RUN cd pkg-config-$ver && \
        mkdir build && \
        cd build && \
        ../configure --with-internal-glib --prefix=/usr/local && \
        make -j$(nproc) && \
        make install

ENV PKG_CONFIG_PATH=/usr/lib64/pkgconfig:/usr/share/pkgconfig:/usr/local/pkgconfig:/usr/local/lib64/pkgconfig:/usr/local/share/pkgconfig

# Build portaudio
RUN wget http://www.portaudio.com/archives/pa_stable_v190600_20161030.tgz && \
        tar -xvf pa_stable_v190600_20161030.tgz
RUN cd portaudio && \
        mkdir objs && \
        cd objs && \
        ../configure --enable-shared --disable-static --prefix=/usr/local && \
        make -j$(nproc) && \
        make install 

# Build eigen3
ENV ver=3.3.9
RUN wget https://gitlab.com/libeigen/eigen/-/archive/$ver/eigen-$ver.tar.gz && \
        tar -xvf eigen-$ver.tar.gz
RUN cd eigen-$ver && \
        mkdir build && \
        cd build && \
        cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. && \
        make -j$(nproc) && \
        make install 

# Build fftw3
ENV ver=3.3.9
RUN wget http://www.fftw.org/fftw-$ver.tar.gz && \
        tar -xvf fftw-$ver.tar.gz
RUN cd fftw-$ver && \
        mkdir build && \
        cd build && \
        ../configure --enable-shared --disable-static --prefix=/usr/local && \
        make -j$(nproc) && \
        make install

RUN apt-get update -y && \
        apt-get install -y mesa-common-dev freeglut3-dev

RUN wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage -O /usr/bin/linuxdeploy && \
        chmod 755 /usr/bin/linuxdeploy

RUN wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage -O /usr/bin/linuxdeploy-plugin-qt && \
        chmod 755 /usr/bin/linuxdeploy-plugin-qt

RUN apt-get update -y && apt-get install -y fuse libegl1-mesa
RUN rm -rf /dockerbuild

CMD cd /build && \
        export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64 && \
        export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib64/pkgconfig:/usr/share/pkgconfig:/usr/local/pkgconfig:/usr/local/lib64/pkgconfig:/usr/local/share/pkgconfig && \
        export GLEW_SOURCE_FILE=/usr/local/src/glew.c && \
        cmake \
            -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
            -DCMAKE_PREFIX_PATH=/opt/Qt5/5.12.10/gcc_64 \
            /src && \
        make -j$(nproc) && \
        /src/docker/deploy-linux.sh
